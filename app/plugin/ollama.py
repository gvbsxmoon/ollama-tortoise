import subprocess
import requests

from fastapi import HTTPException
from app.model.story_request import StoryRequest

async def generate_story(request: StoryRequest):
    # Check if 'ollama' process is running
    process_check = subprocess.run(["pgrep", "ollama"], stdout=subprocess.PIPE)

    if process_check.returncode != 0:
        raise HTTPException(status_code=500, detail="Ollama process is not running.")
    
    # Compose the story prompt
    prompt = (
        f"Create a children story that is engaging, well-told, and no longer than 15 minutes of speaking. "
        f"The story should involve the character '{request.character}' in the environment '{request.environment}'."
    )

    payload = {
        "model": request.model,
        "prompt": prompt,
        "stream": False,
    }

     # Send the POST request to Ollama's API
    try:
        response = requests.post("http://localhost:11434/api/generate", json=payload)
        response.raise_for_status()
        response_data = response.json()
        story = response_data.get("response", "")
    except requests.RequestException as e:
        raise HTTPException(status_code=500, detail=f"Error communicating with Ollama API: {str(e)}")
    
    if not story:
        raise HTTPException(status_code=500, detail="No story generated by the model.")
    
    return story
